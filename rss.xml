<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>IOG Engineering Blog</title>
        <link>https://engineering.iog.io/</link>
        <description>IOG Engineering Blog</description>
        <lastBuildDate>Tue, 01 Mar 2022 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <item>
            <title><![CDATA[GHC February Update]]></title>
            <link>https://engineering.iog.io/2022-03-01-ghc-february-update</link>
            <guid>2022-03-01-ghc-february-update</guid>
            <pubDate>Tue, 01 Mar 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Cross-compilation]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_mojV" id="cross-compilation">Cross-compilation<a class="hash-link" href="#cross-compilation" title="Direct link to heading">​</a></h2><ul><li>Ticket about adapting GHCJS’ code into a proper JS backend for GHC has been opened <!-- -->[<a href="https://gitlab.haskell.org/ghc/ghc/-/issues/21078" target="_blank" rel="noopener noreferrer">#21078</a>]<!-- --> as well as the first merge requests <!-- -->[<a href="https://gitlab.haskell.org/ghc/ghc/-/merge_requests/7573" target="_blank" rel="noopener noreferrer">!7573</a>, <a href="https://gitlab.haskell.org/ghc/ghc/-/merge_requests/7585" target="_blank" rel="noopener noreferrer">!7585</a>, <a href="https://gitlab.haskell.org/ghc/ghc/-/merge_requests/7577" target="_blank" rel="noopener noreferrer">!7577</a>]</li><li>MR status<ul><li>ghc-proposal for OpaqueRef with related MR !7577 adding Opaque# prim type and OpaqueRep RuntimeRep. This began and focused discussions around the design of RuntimeRep for new backends.</li><li>js-codegen: passing CI; needs polishing</li><li>deriveConstants: ready</li></ul></li><li>process discussion with WT:<ul><li>targeting GHC 9.6 (link to Matt’s mail in ghc-devs)</li><li>wiki page</li></ul></li><li>welcome by the community<ul><li>people offering to help on IRC and in the ticket</li><li>ticket responses (emojis)</li></ul></li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="reporting">Reporting<a class="hash-link" href="#reporting" title="Direct link to heading">​</a></h2><ul><li>we wrote a blog post about the work we have done in 2021 as it wasn’t covered anywhere else.</li></ul>]]></content:encoded>
            <category>ghc</category>
        </item>
        <item>
            <title><![CDATA[haskell.nix February Update]]></title>
            <link>https://engineering.iog.io/2022-03-01-haskell-nix-february-update</link>
            <guid>2022-03-01-haskell-nix-february-update</guid>
            <pubDate>Tue, 01 Mar 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Documentation]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_mojV" id="documentation">Documentation<a class="hash-link" href="#documentation" title="Direct link to heading">​</a></h2><ul><li>A tutorial has been added on <a href="https://outline.zw3rk.com/share/d461004d-1f2f-4d7a-95f2-4e20acb18cac" target="_blank" rel="noopener noreferrer">building DWARF-enabled executables</a> on linux systems.  There was also a related fix for building DWARF executables in a nix shell (<a href="https://github.com/input-output-hk/haskell.nix/pull/1385" target="_blank" rel="noopener noreferrer">#1385</a>)</li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="changes">Changes<a class="hash-link" href="#changes" title="Direct link to heading">​</a></h2><ul><li>Support for external Hackage repositories was improved by <a href="https://github.com/input-output-hk/haskell.nix/pull/1370" target="_blank" rel="noopener noreferrer">#1370</a>. We can now use an extra package repository just by adding a <code>repository</code> block to the <code>cabal.project</code> file.  This makes it easy to make use of an extra hackage databases such as <a href="https://ghc.gitlab.haskell.org/head.hackage/" target="_blank" rel="noopener noreferrer">hackage.head</a> and <a href="https://github.com/input-output-hk/hackage-overlay-ghcjs" target="_blank" rel="noopener noreferrer">hackage-overlay-ghcjs</a>.  A <code>sha256</code> for the repository it can be added as a comment in the <code>repository</code> block or by including it in the <code>sha256map</code> argument.</li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="version-updates">Version Updates<a class="hash-link" href="#version-updates" title="Direct link to heading">​</a></h2><ul><li>nix-tools was updated to use the Cabal 3.6.2 and hnix 0.16 <a href="https://github.com/input-output-hk/nix-tools/pull/113" target="_blank" rel="noopener noreferrer">nix-tools#113</a></li><li>Nixpkgs pins were bumped <a href="https://github.com/input-output-hk/haskell.nix/pull/1371" target="_blank" rel="noopener noreferrer">#1371</a></li><li>Update booting on aarch64 linux to ghc 8.8.4 <a href="https://github.com/input-output-hk/haskell.nix/pull/1325" target="_blank" rel="noopener noreferrer">1325</a> and <a href="https://github.com/input-output-hk/haskell.nix/pull/1374" target="_blank" rel="noopener noreferrer">1374</a></li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="bug-fixes">Bug fixes<a class="hash-link" href="#bug-fixes" title="Direct link to heading">​</a></h2><ul><li>Allow linking pcre statically with musl <a href="https://github.com/input-output-hk/haskell.nix/pull/1363" target="_blank" rel="noopener noreferrer">#1363</a></li><li>Add gpiod to system nixpkgs map <a href="https://github.com/input-output-hk/haskell.nix/pull/1359" target="_blank" rel="noopener noreferrer">#1359</a></li><li>Add poppler-cpp to png-config Nixpkgs map <a href="https://github.com/input-output-hk/haskell.nix/pull/1373" target="_blank" rel="noopener noreferrer">#1373</a></li><li>Use the same logic that cabal-install uses for determining the path of a packages <code>.tar.gz</code> in a repository  <a href="https://github.com/input-output-hk/nix-tools/pull/114" target="_blank" rel="noopener noreferrer">nix-tools#114</a></li><li>Fix libnuma dependency in rts.conf <a href="https://github.com/input-output-hk/haskell.nix/commit/18ebf60137dd2ff1be7363eb46f67ebfa366d1dd" target="_blank" rel="noopener noreferrer">1342</a></li><li>Fix when "materialized" dir is deep <a href="https://github.com/input-output-hk/haskell.nix/pull/1376" target="_blank" rel="noopener noreferrer">#1376</a></li><li>Prefer local building for <code>git-ls-files</code> <a href="https://github.com/input-output-hk/haskell.nix/pull/1378" target="_blank" rel="noopener noreferrer">#1378</a> and <a href="https://github.com/input-output-hk/haskell.nix/issues/1381" target="_blank" rel="noopener noreferrer">#1381</a></li><li>Fix stack cache generator <code>sha256</code> is a string not a lambda <a href="https://github.com/input-output-hk/haskell.nix/pull/1383" target="_blank" rel="noopener noreferrer">#1383</a></li><li>Only pass <code>--index-state</code> to <code>cabal</code> when asked <a href="https://github.com/input-output-hk/haskell.nix/pull/1384" target="_blank" rel="noopener noreferrer">#1384</a></li><li>Pass <code>enableDWARF</code> to <code>makeConfigFiles</code> to fix <code>-g3</code> support in <code>nix-shell</code> <a href="https://github.com/input-output-hk/haskell.nix/pull/1385" target="_blank" rel="noopener noreferrer">#1385</a></li></ul><p>Finally, we’d like to thank all the awesome contributors, who make&nbsp;<code>haskell.nix</code>&nbsp;a thriving open source project!&nbsp;❤️</p>]]></content:encoded>
            <category>nix</category>
        </item>
        <item>
            <title><![CDATA[GHC January update]]></title>
            <link>https://engineering.iog.io/2022-02-01-ghc-january-update</link>
            <guid>2022-02-01-ghc-january-update</guid>
            <pubDate>Tue, 01 Feb 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Hopefully 2022 should be the year GHC will get a JavaScript backend without relying on GHCJS. This month the team has been busy planning the work that needs to be done to get there!]]></description>
            <content:encoded><![CDATA[<p>Hopefully 2022 should be the year GHC will get a JavaScript backend without relying on GHCJS. This month the team has been busy planning the work that needs to be done to get there!</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="cross-compilation">Cross-compilation<a class="hash-link" href="#cross-compilation" title="Direct link to heading">​</a></h2><ul><li>GHCJS has been <a href="https://github.com/ghcjs/ghc/tree/ghc-8.10-ghcjs" target="_blank" rel="noopener noreferrer">updated</a> to reduce the gap with GHC 8.10.7 codebase to the point that GHC’s build system is used to build GHCJS</li><li>Internal work planning for the integration of GHCJS into GHC</li><li>A different approach to load plugins into cross-compilers has been implemented <!-- -->[<a href="https://gitlab.haskell.org/ghc/ghc/-/issues/20964" target="_blank" rel="noopener noreferrer">#20964</a>, <a href="https://gitlab.haskell.org/ghc/ghc/-/merge_requests/7377" target="_blank" rel="noopener noreferrer">!7377</a>]</li><li>GHCJS has been exercised to showcase compilation of some Plutus applications</li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="modularity">Modularity<a class="hash-link" href="#modularity" title="Direct link to heading">​</a></h2><ul><li>A few “subsystems” of GHC have been made more modular and reusable by making them independent of the command-line flags (<code>DynFlags</code>) <!-- -->[<a href="https://gitlab.haskell.org/ghc/ghc/-/issues/17957" target="_blank" rel="noopener noreferrer">#17957</a>, <a href="https://gitlab.haskell.org/ghc/ghc/-/merge_requests/7158" target="_blank" rel="noopener noreferrer">!7158</a>, <a href="https://gitlab.haskell.org/ghc/ghc/-/merge_requests/7199" target="_blank" rel="noopener noreferrer">!7199</a>, <a href="https://gitlab.haskell.org/ghc/ghc/-/merge_requests/7325" target="_blank" rel="noopener noreferrer">!7325</a>]<!-- -->. This work resulted in a 10% reduction in call sites to <code>DynFlags</code> and has now removed all references to <code>DynFlags</code> up to the <code>CoreToStg</code> pass, which is almost the entire backend of GHC.</li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="performance">Performance<a class="hash-link" href="#performance" title="Direct link to heading">​</a></h2><ul><li>Jeffrey wrote a new HF <a href="https://github.com/haskellfoundation/tech-proposals/pull/26" target="_blank" rel="noopener noreferrer">proposal</a> about writing a Haskell Optimization handbook and has started working on it</li></ul>]]></content:encoded>
            <category>ghc</category>
        </item>
        <item>
            <title><![CDATA[haskell.nix January Update]]></title>
            <link>https://engineering.iog.io/2022-02-01-haskell-nix-january-update</link>
            <guid>2022-02-01-haskell-nix-january-update</guid>
            <pubDate>Tue, 01 Feb 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[January 2022]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_mojV" id="january-2022"><strong>January 2022</strong><a class="hash-link" href="#january-2022" title="Direct link to heading">​</a></h2><p>This month we merged some very significant improvements to the support for compiling for Android and iOS based AArch64 devices.&nbsp; When the build system is also AArch64 template haskell can often be run locally.&nbsp; This will make targeting mobile devices from AArch64 builders much easier.</p><p>A long running branch containing bug fixes for cross compilation to JavaScript with GHCJS was merged.&nbsp; One nice feature included is better support for adding bindings to C code compiled with emscripten.&nbsp; In some cases it can be as easy as adding a single JavaScript file to the package with wrappers for the C functions.</p><h4 class="anchor anchorWithStickyNavbar_mojV" id="changes">Changes<a class="hash-link" href="#changes" title="Direct link to heading">​</a></h4><ul><li>Much improved AArch64 support including Template Haskell (#1316)</li><li>Improved GHCJS and support for calling C code compiled with emscripten (#1311)</li><li>The environment variables LANG and LOCALE_ARCHIVE are no longer set in shells allowing the users prefered settings to persist (#1341).</li><li>source-repo-override argument added for cabal projects to allow the location of source-repository-package packages to be replaced (#1354)</li></ul><h4 class="anchor anchorWithStickyNavbar_mojV" id="version-updates">Version Updates<a class="hash-link" href="#version-updates" title="Direct link to heading">​</a></h4><ul><li>GHC 9.0.2 was added to the available GHC versions (#1338)</li><li>The nixpkgs pins for 21.05, 21.11 and unstable were all updated (#1334).</li><li>Remaining uses of cabal 3.4 were updated to 3.6.2 (#1328)</li></ul><h4 class="anchor anchorWithStickyNavbar_mojV" id="bug-fixes">Bug fixes<a class="hash-link" href="#bug-fixes" title="Direct link to heading">​</a></h4><ul><li>Dwarf build of ghc 9.2.1 now skipped on hydra to work around 4GB hydra limit (#1333)</li><li>Removed use of propagatedBuildInputs in ghc derivation (#1318).</li><li>Caching of the check-hydra CI script was fixed (#1340)</li></ul>]]></content:encoded>
            <category>nix</category>
        </item>
    </channel>
</rss>