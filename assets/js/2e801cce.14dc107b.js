"use strict";(self.webpackChunkengineering_iog_io=self.webpackChunkengineering_iog_io||[]).push([[450],{6029:function(e){e.exports=JSON.parse('{"blogPosts":[{"id":"2022-03-01-ghc-february-update","metadata":{"permalink":"/2022-03-01-ghc-february-update","source":"@site/blog/2022-03-01-ghc-february-update-bnE9FHoNRc.md","title":"GHC February Update","description":"Cross-compilation","date":"2022-03-01T00:00:00.000Z","formattedDate":"March 1, 2022","tags":[{"label":"ghc","permalink":"/tags/ghc"}],"readingTime":0.645,"truncated":false,"authors":[],"frontMatter":{"slug":"2022-03-01-ghc-february-update","title":"GHC February Update","authors":[],"tags":["ghc"],"custom_edit_url":null},"nextItem":{"title":"haskell.nix February Update","permalink":"/2022-03-01-haskell-nix-february-update"}},"content":"## Cross-compilation\\n\\n* Ticket about adapting GHCJS\u2019 code into a proper JS backend for GHC has been opened \\\\[[#21078](https://gitlab.haskell.org/ghc/ghc/-/issues/21078)\\\\] as well as the first merge requests \\\\[[!7573](https://gitlab.haskell.org/ghc/ghc/-/merge_requests/7573), [!7585](https://gitlab.haskell.org/ghc/ghc/-/merge_requests/7585), [!7577](https://gitlab.haskell.org/ghc/ghc/-/merge_requests/7577)\\\\]\\n* MR status\\n  * ghc-proposal for OpaqueRef with related MR !7577 adding Opaque# prim type and OpaqueRep RuntimeRep. This began and focused discussions around the design of RuntimeRep for new backends.\\n  * js-codegen: passing CI; needs polishing\\n  * deriveConstants: ready\\n* process discussion with WT:\\n  * targeting GHC 9.6 (link to Matt\u2019s mail in ghc-devs)\\n  * wiki page\\n* welcome by the community\\n  * people offering to help on IRC and in the ticket\\n  * ticket responses (emojis)\\n\\n## Reporting\\n\\n* we wrote a blog post about the work we have done in 2021 as it wasn\u2019t covered anywhere else."},{"id":"2022-03-01-haskell-nix-february-update","metadata":{"permalink":"/2022-03-01-haskell-nix-february-update","source":"@site/blog/2022-03-01-haskell-nix-february-update-wDy26Ro4GN.md","title":"haskell.nix February Update","description":"Documentation","date":"2022-03-01T00:00:00.000Z","formattedDate":"March 1, 2022","tags":[{"label":"nix","permalink":"/tags/nix"}],"readingTime":1.275,"truncated":false,"authors":[],"frontMatter":{"slug":"2022-03-01-haskell-nix-february-update","title":"haskell.nix February Update","authors":[],"tags":["nix"],"custom_edit_url":null},"prevItem":{"title":"GHC February Update","permalink":"/2022-03-01-ghc-february-update"},"nextItem":{"title":"GHC January update","permalink":"/2022-02-01-ghc-january-update"}},"content":"## Documentation\\n\\n* A tutorial has been added on [building DWARF-enabled executables](https://outline.zw3rk.com/share/d461004d-1f2f-4d7a-95f2-4e20acb18cac) on linux systems.  There was also a related fix for building DWARF executables in a nix shell ([#1385](https://github.com/input-output-hk/haskell.nix/pull/1385))\\n\\n## Changes\\n\\n* Support for external Hackage repositories was improved by [#1370](https://github.com/input-output-hk/haskell.nix/pull/1370). We can now use an extra package repository just by adding a `repository` block to the `cabal.project` file.  This makes it easy to make use of an extra hackage databases such as [hackage.head](https://ghc.gitlab.haskell.org/head.hackage/) and [hackage-overlay-ghcjs](https://github.com/input-output-hk/hackage-overlay-ghcjs).  A `sha256` for the repository it can be added as a comment in the `repository` block or by including it in the `sha256map` argument.\\n\\n## Version Updates\\n\\n* nix-tools was updated to use the Cabal 3.6.2 and hnix 0.16 [nix-tools#113](https://github.com/input-output-hk/nix-tools/pull/113)\\n* Nixpkgs pins were bumped [#1371](https://github.com/input-output-hk/haskell.nix/pull/1371)\\n* Update booting on aarch64 linux to ghc 8.8.4 [1325](https://github.com/input-output-hk/haskell.nix/pull/1325) and [1374](https://github.com/input-output-hk/haskell.nix/pull/1374)\\n\\n## Bug fixes\\n\\n* Allow linking pcre statically with musl [#1363](https://github.com/input-output-hk/haskell.nix/pull/1363)\\n* Add gpiod to system nixpkgs map [#1359](https://github.com/input-output-hk/haskell.nix/pull/1359)\\n* Add poppler-cpp to png-config Nixpkgs map [#1373](https://github.com/input-output-hk/haskell.nix/pull/1373)\\n* Use the same logic that cabal-install uses for determining the path of a packages `.tar.gz` in a repository  [nix-tools#114](https://github.com/input-output-hk/nix-tools/pull/114)\\n* Fix libnuma dependency in rts.conf [1342](https://github.com/input-output-hk/haskell.nix/commit/18ebf60137dd2ff1be7363eb46f67ebfa366d1dd)\\n* Fix when \\"materialized\\" dir is deep [#1376](https://github.com/input-output-hk/haskell.nix/pull/1376)\\n* Prefer local building for `git-ls-files` [#1378](https://github.com/input-output-hk/haskell.nix/pull/1378) and [#1381](https://github.com/input-output-hk/haskell.nix/issues/1381)\\n* Fix stack cache generator `sha256` is a string not a lambda [#1383](https://github.com/input-output-hk/haskell.nix/pull/1383)\\n* Only pass `--index-state` to `cabal` when asked [#1384](https://github.com/input-output-hk/haskell.nix/pull/1384)\\n* Pass `enableDWARF` to `makeConfigFiles` to fix `-g3` support in `nix-shell` [#1385](https://github.com/input-output-hk/haskell.nix/pull/1385)\\n\\nFinally, we\u2019d like to thank all the awesome contributors, who make\xa0`haskell.nix`\xa0a thriving open source project!\xa0:heart:"},{"id":"2022-02-01-ghc-january-update","metadata":{"permalink":"/2022-02-01-ghc-january-update","source":"@site/blog/2022-02-01-ghc-january-update-jTlkXUxJSn.md","title":"GHC January update","description":"Hopefully 2022 should be the year GHC will get a JavaScript backend without relying on GHCJS. This month the team has been busy planning the work that needs to be done to get there!","date":"2022-02-01T00:00:00.000Z","formattedDate":"February 1, 2022","tags":[{"label":"ghc","permalink":"/tags/ghc"}],"readingTime":0.9,"truncated":false,"authors":[],"frontMatter":{"slug":"2022-02-01-ghc-january-update","title":"GHC January update","authors":[],"tags":["ghc"],"custom_edit_url":null},"prevItem":{"title":"haskell.nix February Update","permalink":"/2022-03-01-haskell-nix-february-update"},"nextItem":{"title":"haskell.nix January Update","permalink":"/2022-02-01-haskell-nix-january-update"}},"content":"Hopefully 2022 should be the year GHC will get a JavaScript backend without relying on GHCJS. This month the team has been busy planning the work that needs to be done to get there!\\n\\n## Cross-compilation\\n\\n* GHCJS has been [updated](https://github.com/ghcjs/ghc/tree/ghc-8.10-ghcjs) to reduce the gap with GHC 8.10.7 codebase to the point that GHC\u2019s build system is used to build GHCJS\\n* Internal work planning for the integration of GHCJS into GHC\\n* A different approach to load plugins into cross-compilers has been implemented \\\\[[#20964](https://gitlab.haskell.org/ghc/ghc/-/issues/20964), [!7377](https://gitlab.haskell.org/ghc/ghc/-/merge_requests/7377)\\\\]\\n* GHCJS has been exercised to showcase compilation of some Plutus applications\\n\\n## Modularity\\n\\n* A few \u201csubsystems\u201d of GHC have been made more modular and reusable by making them independent of the command-line flags (`DynFlags`) \\\\[[#17957](https://gitlab.haskell.org/ghc/ghc/-/issues/17957), [!7158](https://gitlab.haskell.org/ghc/ghc/-/merge_requests/7158), [!7199](https://gitlab.haskell.org/ghc/ghc/-/merge_requests/7199), [!7325](https://gitlab.haskell.org/ghc/ghc/-/merge_requests/7325)\\\\]. This work resulted in a 10% reduction in call sites to `DynFlags` and has now removed all references to `DynFlags` up to the `CoreToStg` pass, which is almost the entire backend of GHC.\\n\\n## Performance\\n\\n* Jeffrey wrote a new HF [proposal](https://github.com/haskellfoundation/tech-proposals/pull/26) about writing a Haskell Optimization handbook and has started working on it"},{"id":"2022-02-01-haskell-nix-january-update","metadata":{"permalink":"/2022-02-01-haskell-nix-january-update","source":"@site/blog/2022-02-01-haskell-nix-january-update-vNau7aVn4Q.md","title":"haskell.nix January Update","description":"January 2022","date":"2022-02-01T00:00:00.000Z","formattedDate":"February 1, 2022","tags":[{"label":"nix","permalink":"/tags/nix"}],"readingTime":1.215,"truncated":false,"authors":[],"frontMatter":{"slug":"2022-02-01-haskell-nix-january-update","title":"haskell.nix January Update","authors":[],"tags":["nix"],"custom_edit_url":null},"prevItem":{"title":"GHC January update","permalink":"/2022-02-01-ghc-january-update"}},"content":"## **January 2022**\\n\\nThis month we merged some very significant improvements to the support for compiling for Android and iOS based AArch64 devices.\xa0 When the build system is also AArch64 template haskell can often be run locally.\xa0 This will make targeting mobile devices from AArch64 builders much easier.\\n\\nA long running branch containing bug fixes for cross compilation to JavaScript with GHCJS was merged.\xa0 One nice feature included is better support for adding bindings to C code compiled with emscripten.\xa0 In some cases it can be as easy as adding a single JavaScript file to the package with wrappers for the C functions.\\n\\n#### Changes\\n\\n* Much improved AArch64 support including Template Haskell (#1316)\\n* Improved GHCJS and support for calling C code compiled with emscripten (#1311)\\n* The environment variables LANG and LOCALE_ARCHIVE are no longer set in shells allowing the users prefered settings to persist (#1341).\\n* source-repo-override argument added for cabal projects to allow the location of source-repository-package packages to be replaced (#1354)\\n\\n#### Version Updates\\n\\n* GHC 9.0.2 was added to the available GHC versions (#1338)\\n* The nixpkgs pins for 21.05, 21.11 and unstable were all updated (#1334).\\n* Remaining uses of cabal 3.4 were updated to 3.6.2 (#1328)\\n\\n#### Bug fixes\\n\\n* Dwarf build of ghc 9.2.1 now skipped on hydra to work around 4GB hydra limit (#1333)\\n* Removed use of propagatedBuildInputs in ghc derivation (#1318).\\n* Caching of the check-hydra CI script was fixed (#1340)"}]}')}}]);